#A partir del conjunto de datos de soccer de la liga española de las temporadas 2017/2018,
#2018/2019 y 2019/2020, crea el data frame SmallData, que contenga las columnas date, home.team, home.score, away.team y away.score; esto lo puede hacer con ayuda de la función select del paquete dplyr. Luego establece un directorio de trabajo y con ayuda de la función write.csv guarda el data frame como un archivo csv con nombre soccer.csv. Puedes colocar como argumento row.names = FALSE en write.csv.

#carga base----
library(readr)
base4 <- read_csv("https://raw.githubusercontent.com/wabinai/BEDU-BD-Postworks/main/BD/Postwork4/base4.csv")
View(base4)
SmallData<-base4[,-c(1,7)]
#----

#Transformacion de variables y nombres de columnas
#install.packages("lubridate")
library(lubridate)
SmallData$Date<-dmy(SmallData$Date) #se convierte al formato de fecha deseado
View(SmallData)
str(SmallData) #se confirma que las variables se transformaron adecuadamente
colnames(SmallData)<-c("date","home.team","away.team","home.score","away.score")

#Guardar base
#setwd("~/Respaldo/Documents/BEDU/Modulo 2/Sesion 5")
#write.csv(SmallData, file = "soccer.csv", row.names = FALSE) #row.names false es para que no ponga la columna donde ennumera cada fila

#Con la función create.fbRanks.dataframes del paquete fbRanks importe el archivo soccer.csv a R y al mismo tiempo asignelo a una variable llamada listasoccer. Se creará una lista con los elementos scores y teams que son data frames listos para la función rank.teams. Asigna estos data frames a variables llamadas anotaciones y equipos.

#install.packages("fbRanks")
library(fbRanks)
listasoccer<-create.fbRanks.dataframes("https://raw.githubusercontent.com/wabinai/BEDU-BD-Postworks/main/BD/Postwork5/soccer.csv",date.format = "%Y-%m-%d")
anotaciones<-listasoccer$scores
equipos<-listasoccer$teams

#Con ayuda de la función unique crea un vector de fechas (fecha) que no se repitan y que correspondan a las fechas en las que se jugaron partidos. Crea una variable llamada n que contenga el número de fechas diferentes. Posteriormente, con la función rank.teams y usando como argumentos los data frames anotaciones y equipos, crea un ranking de equipos usando únicamente datos desde la fecha inicial y hasta la penúltima fecha en la que se jugaron partidos, estas fechas las deberá especificar en max.date y min.date. Guarda los resultados con el nombre ranking.
 
fecha<-unique(SmallData$date)
n<-length(fecha)
ranking<-rank.teams(scores = anotaciones, teams = equipos, max.date = fecha[n-1], min.date = fecha[1])

#Finalmente estima las probabilidades de los eventos, el equipo de casa gana, el equipo
#visitante gana o el resultado es un empate para los partidos que se jugaron en la última
#fecha del vector de fechas fecha. Esto lo puedes hacer con ayuda de la función predict y
#usando como argumentos ranking y fecha[n] que deberá especificar en date.

predict(ranking, date=fecha[n])
